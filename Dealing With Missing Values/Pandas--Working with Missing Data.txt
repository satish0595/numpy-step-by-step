			Working with Missing Data
		============================================
=>Missing Data can occur when no information is provided for one or more items or for a whole unit. Missing Data is a very big problem in real life scenario. Missing Data can also refer to as NA(Not Available) values in pandas.
--------------------------------------------------------------
Checking for missing values using isna(),isnull() and notnull() :
---------------------------------------------------------------
=>In order to check missing values in Pandas DataFrame, we use a function isna(),isnull() and notnull(). 
=>These function help in checking whether a value is NaN or not. These function can also be used in    Pandas Series in order to find null values in a series.

# importing pandas as pd
import pandas as pd
 
# importing numpy as np
import numpy as np
 
# dictionary of lists
dict = {'First Score':[100, 90, np.nan, 95],
        'Second Score': [30, 45, 56, np.nan],
        'Third Score':[np.nan, 40, 80, 98]}
 
# creating a dataframe from list
df = pd.DataFrame(dict)
 
# using isnull() function  
df.isnull()
OUTPUT
	First Score	Second Score	Third Score
0	False		False		True
1	False		False		False
2	True		False		False
3	False		True		False
====================================================================================
	Filling missing values using fillna(), replace()  :
====================================================================================
=>In order to fill null values in a datasets, we use fillna(), replace() functionm these function replaces NaN values with some value of their own. All these function help in filling a null values in datasets of a DataFrame. 

		by using fillna() and replace()
		---------------------------------
# importing pandas as pd
import pandas as pd
 
# importing numpy as np
import numpy as np
 
# dictionary of lists
dict = {'First Score':[100, 90, np.nan, 95],
        'Second Score': [30, 45, 56, np.nan],
        'Third Score':[np.nan, 40, 80, 98]}
 
# creating a dataframe from dictionary
df = pd.DataFrame(dict)
 
# filling missing value using fillna()  
df.fillna(0)  # OR df.replace(to_replace = np.nan, value = 0)  
OUTPUT
-------
	First Score	Second Score	Third Score
0	100.0		30.0		0.0
1	90.0		45.0		40.0
2	0.0		56.0		80.0
3	95.0		0.0		98.0
============================================================
	Dropping missing values using dropna() :
============================================================
In order to drop a null values from a dataframe, we used dropna() function this fuction drop Rows/Columns of datasets with Null values in different ways.

# importing pandas as pd
import pandas as pd
 
# importing numpy as np
import numpy as np
 
# dictionary of lists
dict = {'First Score':[100, 90, np.nan, 95],
        'Second Score': [30, np.nan, 45, 56],
        'Third Score':[52, 40, 80, 98],
        'Fourth Score':[np.nan, np.nan, np.nan, 65]}
 
# creating a dataframe from dictionary
df = pd.DataFrame(dict)
print(df)
OUTPUT
---------
   First Score  Second Score  Third Score  Fourth Score
0        100.0          30.0           52           NaN
1         90.0           NaN           40           NaN
2          NaN          45.0           80           NaN
3         95.0          56.0           98          65.0

Now we drop rows with at least one Nan value (Null value)

	First Score	Second Score	Third Score	Fourth Score
3	95.0		56.0		98		65.0
========================================================================