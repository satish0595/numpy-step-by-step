			======================================================
					Matplotlib--Set Font Properties for Title and Labels
			======================================================
=>Plots in Matplotlib are used to represent the visualization of a given data. These plots require the need for labels (x and y-axis) as well as the title of the plot. Every plot has the x and y-axis. These axes represent the values of the data set plotted against the other.
------------------------------------------------
=>Adding font properties to a plot
------------------------------------------------
In Matplotlib, we use the fontdict parameter of the pyplot.xlabel() , pyplot.ylabel() and pyplot.title() functions to set font properties for the titles and labels of a plot. The fontdict function on its own takes parameters such as:
	1) family: serif, cursive, sans-serif, fantasy, monospace.
	2) color: blue, green, cyan, white, yellow, etc.
	3) size: Any positive integer value.
=>Now, these titles and labels can also be given different font properties to enhance the visuals of the plot.
=>We can use the fontdict parameter in xlabel(), ylabel(), and title() to set font properties for the title and labels.
---------------------------------------------------------------------------------------------------------------------------------------------------
Syntax:        dictobj={"family":"Font Name","color":"color name","size":"font size"}
--------------------------------------------------------------------------------------------------------------------------------------------------
Example
---------------
Set font properties for the title and labels:
---------------------------------
import numpy as np
import matplotlib.pyplot as plt

x = np.array([80, 85, 90, 95, 100, 105, 110, 115, 120, 125])
y = np.array([240, 250, 260, 270, 280, 290, 300, 310, 320, 330])

font1 = {'family':'serif','color':'blue','size':20}
font2 = {'family':'serif','color':'darkred','size':15}

plt.title("Sports Watch Data", fontdict = font1)
plt.xlabel("Average Pulse", fontdict = font2)
plt.ylabel("Calorie Burnage", fontdict = font2)

plt.plot(x, y)
plt.show()
==================================================================================
Position the Title
-------------------------------------------
You can use the loc parameter in title() to position the title.
------------------------------------------------------------------
Legal values for loc parameter are: 'left', 'right', and 'center'. Default value is 'center'.
-------------------------------------------------------------------------------------------
Example
Position the title to the left:

import numpy as np
import matplotlib.pyplot as plt

x = np.array([80, 85, 90, 95, 100, 105, 110, 115, 120, 125])
y = np.array([240, 250, 260, 270, 280, 290, 300, 310, 320, 330])

plt.title("Sports Watch Data", loc = 'left')
plt.xlabel("Average Pulse")
plt.ylabel("Calorie Burnage")

plt.plot(x, y)
plt.show()
=============================================================================